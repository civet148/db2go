// Code generated by db2go. DO NOT EDIT.
// https://github.com/civet148/db2go

package test

import "github.com/civet148/sqlca/v3"

const TableNameInventoryData = "`inventory_data`" //库存数据表 

const (
INVENTORY_DATA_COLUMN_ID = "id"
INVENTORY_DATA_COLUMN_CREATE_ID = "create_id"
INVENTORY_DATA_COLUMN_CREATE_NAME = "create_name"
INVENTORY_DATA_COLUMN_CREATE_TIME = "create_time"
INVENTORY_DATA_COLUMN_UPDATE_ID = "update_id"
INVENTORY_DATA_COLUMN_UPDATE_NAME = "update_name"
INVENTORY_DATA_COLUMN_UPDATE_TIME = "update_time"
INVENTORY_DATA_COLUMN_IS_FROZEN = "is_frozen"
INVENTORY_DATA_COLUMN_NAME = "name"
INVENTORY_DATA_COLUMN_SERIAL_NO = "serial_no"
INVENTORY_DATA_COLUMN_QUANTITY = "quantity"
INVENTORY_DATA_COLUMN_PRICE = "price"
INVENTORY_DATA_COLUMN_PRODUCT_EXTRA = "product_extra"
INVENTORY_DATA_COLUMN_LOCATION = "location"
)

type InventoryData--PACKAGE struct { 
	Id uint64 `json:"id,omitempty" db:"id" ` //产品ID 
	CreateId uint64 `json:"create_id,omitempty" db:"create_id" ` //创建人ID 
	CreateName string `json:"create_name,omitempty" db:"create_name" ` //创建人姓名 
	CreateTime string `json:"create_time,omitempty" db:"create_time" ` //创建时间 
	UpdateId uint64 `json:"update_id,omitempty" db:"update_id" ` //更新人ID 
	UpdateName string `json:"update_name,omitempty" db:"update_name" ` //更新人姓名 
	UpdateTime string `json:"update_time,omitempty" db:"update_time" ` //更新时间 
	IsFrozen int8 `json:"is_frozen,omitempty" db:"is_frozen" ` //冻结状态(0: 未冻结 1: 已冻结) 
	Name string `json:"name,omitempty" db:"name" ` //产品名称 
	SerialNo string `json:"serial_no,omitempty" db:"serial_no" ` //产品编号 
	Quantity sqlca.Decimal `json:"quantity,omitempty" db:"quantity" ` //产品库存 
	Price sqlca.Decimal `json:"price,omitempty" db:"price" ` //产品均价 
	ProductExtra string `json:"product_extra,omitempty" db:"product_extra" sqlca:"isnull"` //产品附带数据(JSON文本) 
	Location sqlca.Point `json:"location,omitempty" db:"location" sqlca:"isnull"` //地理位置 
}

func (do *InventoryData--PACKAGE) GetId() uint64 { return do.Id } 
func (do *InventoryData--PACKAGE) SetId(v uint64) { do.Id = v } 
func (do *InventoryData--PACKAGE) GetCreateId() uint64 { return do.CreateId } 
func (do *InventoryData--PACKAGE) SetCreateId(v uint64) { do.CreateId = v } 
func (do *InventoryData--PACKAGE) GetCreateName() string { return do.CreateName } 
func (do *InventoryData--PACKAGE) SetCreateName(v string) { do.CreateName = v } 
func (do *InventoryData--PACKAGE) GetCreateTime() string { return do.CreateTime } 
func (do *InventoryData--PACKAGE) SetCreateTime(v string) { do.CreateTime = v } 
func (do *InventoryData--PACKAGE) GetUpdateId() uint64 { return do.UpdateId } 
func (do *InventoryData--PACKAGE) SetUpdateId(v uint64) { do.UpdateId = v } 
func (do *InventoryData--PACKAGE) GetUpdateName() string { return do.UpdateName } 
func (do *InventoryData--PACKAGE) SetUpdateName(v string) { do.UpdateName = v } 
func (do *InventoryData--PACKAGE) GetUpdateTime() string { return do.UpdateTime } 
func (do *InventoryData--PACKAGE) SetUpdateTime(v string) { do.UpdateTime = v } 
func (do *InventoryData--PACKAGE) GetIsFrozen() int8 { return do.IsFrozen } 
func (do *InventoryData--PACKAGE) SetIsFrozen(v int8) { do.IsFrozen = v } 
func (do *InventoryData--PACKAGE) GetName() string { return do.Name } 
func (do *InventoryData--PACKAGE) SetName(v string) { do.Name = v } 
func (do *InventoryData--PACKAGE) GetSerialNo() string { return do.SerialNo } 
func (do *InventoryData--PACKAGE) SetSerialNo(v string) { do.SerialNo = v } 
func (do *InventoryData--PACKAGE) GetQuantity() sqlca.Decimal { return do.Quantity } 
func (do *InventoryData--PACKAGE) SetQuantity(v sqlca.Decimal) { do.Quantity = v } 
func (do *InventoryData--PACKAGE) GetPrice() sqlca.Decimal { return do.Price } 
func (do *InventoryData--PACKAGE) SetPrice(v sqlca.Decimal) { do.Price = v } 
func (do *InventoryData--PACKAGE) GetProductExtra() string { return do.ProductExtra } 
func (do *InventoryData--PACKAGE) SetProductExtra(v string) { do.ProductExtra = v } 
func (do *InventoryData--PACKAGE) GetLocation() sqlca.Point { return do.Location } 
func (do *InventoryData--PACKAGE) SetLocation(v sqlca.Point) { do.Location = v } 
